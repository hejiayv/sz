#include <Arduino.h>
#include <U8g2lib.h>
#include <TM1637.h>
#include <WiFi.h>

const char* ssid = "MI 11";
const char* password = "11111111";
const int x = 48;
const int y = 48;
const int SDA_PIN = 5;  //引脚连接
const int SDC_PIN = 4;
const uint8_t TM1637_CLK = 2;
const uint8_t TM1637_DIO = 3;
int ymr = 0;
int ym = 0;
int yml = 0;
int fi = 1;
int js = 0;
int i = 0;
//char* sj[] ={0,1,2,3,4,5,6,7,8,9,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,-,}
// 初始化显示屏
//U8G2_SH1106_128X64_NONAME_1_SW_I2C u8g2(U8G2_R2, SDC_PIN, SDA_PIN, U8X8_PIN_NONE);
//U8G2_SH1106_128X64_NONAME_F_2ND_HW_I2C u8g2(U8G2_R0, SDC_PIN, SDA_PIN, /* reset=*/ U8X8_PIN_NONE);
U8G2_SH1106_128X64_NONAME_F_HW_I2C u8g2(U8G2_R2, U8X8_PIN_NONE, SDC_PIN, SDA_PIN);
//#define OLED_I2C_ADDRESS 0x3C
TM1637 tm1637(TM1637_CLK, TM1637_DIO);
// 显示的图片
const unsigned char MyBitmap[5][80] PROGMEM = {
  { 0x00, 0x00, 0x04, 0x00, 0x8C, 0x0F, 0x98, 0x08, 0x80, 0x08, 0xC0, 0x08, 0x6E, 0x78, 0x28, 0x00,
    0xC8, 0x1F, 0x88, 0x10, 0x88, 0x09, 0x28, 0x0D, 0x38, 0x06, 0x18, 0x0F, 0xC8, 0x78, 0x30, 0x40 },
  { 0x00, 0x00, 0x00, 0x00, 0xFC, 0x3F, 0x4C, 0x22, 0xFC, 0x3F, 0x80, 0x01, 0xFC, 0x3F, 0xF0, 0x1F,
    0x10, 0x08, 0xF0, 0x0F, 0x10, 0x08, 0xF0, 0x0F, 0xF0, 0x0F, 0x10, 0x08, 0xFE, 0x7F, 0x00, 0x00 },



  { 0x00, 0x08, 0x00, 0x1F, 0xFC, 0x00, 0x80, 0x00, 0x80, 0x00, 0xFC, 0x1F, 0x80, 0x00, 0x80, 0x00,
    0x80, 0x00, 0xFF, 0x7F, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0xA0, 0x00, 0x40, 0x00 }, /*"手",0*/
  { 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0xFC, 0x1F, 0x84, 0x10, 0x84, 0x10, 0x84, 0x10, 0xFC, 0x1F,
    0x84, 0x10, 0x84, 0x10, 0x84, 0x10, 0xFC, 0x1F, 0x84, 0x50, 0x80, 0x40, 0x80, 0x40, 0x00, 0x7F }, /*"电",1*/
  { 0x08, 0x02, 0x08, 0x02, 0xFC, 0x7E, 0x14, 0x09, 0xA2, 0x10, 0xFD, 0x1F, 0x04, 0x10, 0xF4, 0x17,
    0x04, 0x10, 0xE4, 0x13, 0x24, 0x12, 0x24, 0x12, 0xE4, 0x13, 0x04, 0x10, 0x04, 0x14, 0x04, 0x08 }, /*"筒",2*/




};
// 设置图标
const unsigned char settingsIcon[] PROGMEM = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0xC0, 0x03, 0x00, 0x00, 0xE0, 0x07, 0x00, 0x00, 0xE3, 0xC7, 0x00, 0x80, 0xE7, 0xE7, 0x01,
  0xC0, 0xFF, 0xFF, 0x03, 0xC0, 0xFF, 0xFF, 0x03, 0x80, 0xFF, 0xFF, 0x01, 0x00, 0xFF, 0xFF, 0x00,
  0x00, 0x3F, 0xFC, 0x00, 0xE0, 0x1F, 0xF8, 0x07, 0xF0, 0x0F, 0xF0, 0x0F, 0xF0, 0x0F, 0xF0, 0x0F,
  0xF0, 0x0F, 0xF0, 0x0F, 0xF0, 0x0F, 0xF0, 0x0F, 0xE0, 0x1F, 0xF8, 0x07, 0x00, 0x3F, 0xFC, 0x00,
  0x00, 0xFF, 0xFF, 0x00, 0x80, 0xFF, 0xFF, 0x01, 0xC0, 0xFF, 0xFF, 0x03, 0xC0, 0xFF, 0xFF, 0x03,
  0x80, 0xE7, 0xE7, 0x01, 0x00, 0xE3, 0xC7, 0x00, 0x00, 0xE0, 0x07, 0x00, 0x00, 0xC0, 0x03, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /*"d:\Users\hejia\Desktop\123.bmp",0*/


};

const unsigned char settingsIconl[] PROGMEM = {

  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFC, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0xF8, 0x1F, 0x00, 0x00, 0xF0, 0x0F, 0x00, 0x00, 0xF0, 0x0F, 0x00, 0x00, 0xE0, 0x07, 0x00,
  0x00, 0xE0, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x02, 0x00,
  0x00, 0x40, 0x02, 0x00, 0x00, 0xC0, 0x03, 0x00, 0x00, 0x40, 0x02, 0x00, 0x00, 0x40, 0x02, 0x00,
  0x00, 0x40, 0x02, 0x00, 0x00, 0xC0, 0x03, 0x00, 0x00, 0xC0, 0x03, 0x00, 0x00, 0xC0, 0x03, 0x00,
  0x00, 0xC0, 0x03, 0x00, 0x00, 0xC0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /*"d:\Users\hejia\Desktop\112.bmp",0*/

};
const unsigned char settingsIcone[] PROGMEM = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFC, 0x3F, 0x00, 0x80, 0xFF, 0xFF, 0x01,
  0xC0, 0xFF, 0xFF, 0x07, 0xF0, 0x07, 0xE0, 0x0F, 0xF8, 0x01, 0x80, 0x1F, 0x7C, 0xF0, 0x0F, 0x3E,
  0x1C, 0xFE, 0x7F, 0x38, 0x08, 0xFF, 0xFF, 0x10, 0xC0, 0x1F, 0xF8, 0x03, 0xC0, 0x07, 0xE0, 0x03,
  0xC0, 0xE1, 0x87, 0x03, 0x80, 0xF8, 0x1F, 0x01, 0x00, 0xFC, 0x3F, 0x00, 0x00, 0x7E, 0x7E, 0x00,
  0x00, 0x1C, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x03, 0x00, 0x00, 0xE0, 0x07, 0x00,
  0x00, 0xE0, 0x07, 0x00, 0x00, 0xE0, 0x07, 0x00, 0x00, 0xC0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /*"d:\Users\hejia\Desktop\544454.bmp",0*/
};





void setup() {
  // 配置输入引脚并设置为上拉
  pinMode(0, INPUT_PULLUP);
  pinMode(1, INPUT_PULLUP);
  pinMode(18, INPUT_PULLUP);
  /*
  pinMode(10, INPUT_PULLUP);
  pinMode(11, INPUT_PULLUP);
  
  pinMode(6, INPUT_PULLUP);
  pinMode(7, INPUT_PULLUP);*/

  // 初始化显示屏
  u8g2.begin();
  // 设定字体

  u8g2.setFont(u8g2_font_wqy12_t_gb2312);
  // 启用UTF-8编码
  u8g2.enableUTF8Print();
  //u8g2.setI2CAddress(OLED_I2C_ADDRESS);
}
void loop() {
  // 读取GPIO引脚状态
  int pin0 = digitalRead(0);
  int pin1 = digitalRead(1);
  int pin18 = digitalRead(18);

  // 设置中文字体
  u8g2.setFont(u8g2_font_unifont_t_chinese2);
  // 清空显示屏并准备显示下一帧内容
  u8g2.firstPage();
  if (pin0 == LOW) {
    ym++;
    delay(100);
  } else if (pin1 == LOW) {
    ym--;
    delay(100);
  } else if (pin18 == LOW) {
    yml++;
    delay(100);
  }

  if (ym < 0 || ym > 3 || yml > 4) {
    if (ym < 0) {
      ym = 3;
    } else if (ym > 3) {
      ym = 0;
    } else if (yml > 4) {
      yml = 3;
    }
  }
  // 绘制图形、文字等
  do {
    // 绘制图片
    //u8g2.setDisplayRotation(U8G2_R2);
    if (fi == 1) {
      u8g2.setCursor(0, 20);
      u8g2.print("链接中...");
      u8g2.sendBuffer();  // 在串口上打印连接WiFi的信息
      delay(1000);
      u8g2.firstPage();
      u8g2.sendBuffer();
      WiFi.begin(ssid, password);  // 连接WiFi网络

      while (WiFi.status() != WL_CONNECTED && js < 10) {  // 等待WiFi连接状态
        
        u8g2.setCursor(0, 18);
        u8g2.print("链接中...");
        
        js++;
        u8g2.setCursor(40, 26);
        u8g2.print(js);
        u8g2.sendBuffer();
        delay(1000);
        u8g2.firstPage();
        u8g2.sendBuffer();
      }

      u8g2.setCursor(0, 18);
      u8g2.print(ssid);  // 在串口上打印成功连接WiFi的信息
      u8g2.setCursor(0, 30);
      u8g2.print(password);  // 在串口上打印IP地址信息
      u8g2.setCursor(0, 55);
      u8g2.print(WiFi.localIP());  // 获取并输出ESP32-C3的IP地址信息
      u8g2.sendBuffer();
      fi = 0;
      delay(4000);
    } else if (fi == 0) {

      if (yml == 3) {
        if (ym == 0) {
          u8g2.drawXBMP(x, y, 16, 16, MyBitmap[0]);
          u8g2.drawXBMP(x + 16, y, 16, 16, MyBitmap[1]);
          u8g2.drawXBMP(x, y - 40, 32, 32, settingsIcon);
        } else if (ym == 1) {
          u8g2.drawXBMP(x - 8, y, 16, 16, MyBitmap[2]);
          u8g2.drawXBMP(x + 16 - 8, y, 16, 16, MyBitmap[3]);
          u8g2.drawXBMP(x + 32 - 8, y, 16, 16, MyBitmap[4]);
          u8g2.drawXBMP(x, y - 40, 32, 32, settingsIconl);
        } else if (ym == 2) {
          u8g2.setCursor(x, 64);
          u8g2.print("WIFI");
          u8g2.drawXBMP(x, y - 40, 32, 32, settingsIcone);
        } else if (ym == 3) {

          u8g2.drawXBMP(x, y - 40, 32, 32, settingsIconl);
        }
         ymr=ym;
         i==0;

      } else if (yml == 4) {
        if(i==0){ym=0;i=1;}
        
        if (ymr == 0) {
          if (ym == 0) {
            u8g2.setCursor(0, 55);
            u8g2.print("1");
            u8g2.drawFrame(0, 0, 128, 18);
          } else if (ym == 1) {
            u8g2.setCursor(0, 55);
            u8g2.print("2");
            u8g2.drawFrame(0, 18, 128, 18);
          } else if (ym == 2) {
            u8g2.setCursor(0, 55);
            u8g2.print("3");
            u8g2.drawFrame(0, 36, 128, 18);
          } else if (ym == 3) {
            u8g2.setCursor(0, 55);
            u8g2.print("4");
          }
          // 方框的长宽包括了边框所在的像素点6
        } else if (ymr == 1) {
          ym = 0;
          u8g2.drawXBMP(x, 0, 32, 32, settingsIconl);
          u8g2.drawXBMP(x, 32, 32, 32, settingsIconl);
        } else if (ymr == 2) {
          u8g2.setCursor(3, 16);
          u8g2.print(ssid);  // 在串口上打印成功连接WiFi的信息
          u8g2.setCursor(3, 32);
          u8g2.print(password);  // 在串口上打印IP地址信息
          u8g2.setCursor(3, 48);
          u8g2.print(WiFi.localIP());  // 获取并输出ESP32-C3的IP地址信息
          u8g2.sendBuffer();
          if (ym == 0) {
            u8g2.setCursor(0, 55);
            u8g2.print("1");
            u8g2.drawFrame(0, 0, 128, 18);
          } else if (ym == 1) {
            u8g2.setCursor(0, 55);
            u8g2.print("2");
            u8g2.drawFrame(0, 18, 128, 18);
          } else if (ym == 2) {
            u8g2.setCursor(0, 55);
            u8g2.print("3");
            u8g2.drawFrame(0, 36, 128, 18);
          } else if (ym == 3) {
            u8g2.setCursor(0, 55);
            u8g2.print("4");
          }
          // 方框的长宽包括了边框所在的像素点6
        } else if (ymr == 3) {
          if (ym == 0) {
            u8g2.setCursor(0, 55);
            u8g2.print("1");
            u8g2.drawFrame(0, 0, 128, 18);
          } else if (ym == 1) {
            u8g2.setCursor(0, 55);
            u8g2.print("2");
            u8g2.drawFrame(0, 18, 128, 18);
          } else if (ym == 2) {
            u8g2.setCursor(0, 55);
            u8g2.print("3");
            u8g2.drawFrame(0, 36, 128, 18);
          } else if (ym == 3) {
            u8g2.setCursor(0, 55);
            u8g2.print("4");
          }
          // 方框的长宽包括了边框所在的像素点6
        }
      }
      // 判断引脚状态并显示相应文字


      u8g2.setCursor(20, 55);
      u8g2.print(ym);
      u8g2.print(yml);
      // 发送缓冲区
      u8g2.sendBuffer();
    }

  } while (u8g2.nextPage());
}